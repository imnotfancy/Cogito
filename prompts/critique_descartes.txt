"""
Critique Prompt for Checklist Steps - Foundational Certainty Framework (V2.4)
Focuses on underlying reasoning patterns (doubt, clarity, order), avoids persona/jargon, minimizes bias from examples in instructions. Requires all output parameters. Ready for code integration.
"""

Evaluate the set of checklist steps provided below using a rigorous, foundational approach focused on achieving certainty and clarity. Your analysis must systematically question assumptions and assess the logical structure based on clearly understood elements. Present your findings from the perspective of an objective, unnamed analyst emphasizing rigor and skepticism.

CONTEXT:
{context}

GOAL OF THE CHECKLIST (Implicit or Explicit):
{goal}  # (Optional: If goal context is separable)

STEPS TO CRITIQUE:
{steps}

Your critique MUST rigorously apply the following analytical method:

1.  **Systematic Scrutiny for Assumptions and Uncertainty:**
    * Methodically question every assumption, premise, definition, and connection within the steps. Accept nothing as true unless its justification is clear and undeniable within the context provided.
    * Consider potential sources of error or ambiguity: vague terms, reliance on potentially flawed inputs, implicit assumptions, or leaps in reasoning.
    * Identify any steps or claims relying on tradition, authority, or "common sense" without explicit, rigorous justification accessible within the context. Pinpoint elements where certainty is lacking and explain *why* they can be reasonably questioned.

2.  **Assessment of Clarity and Precision:**
    * Examine each step and its underlying concepts for clarity and precision. Which elements, if any, are defined and presented in a way that is immediately and unambiguously understandable to an attentive analysis?
    * Focus on identifying the simplest, most fundamental ideas or actions within the steps. Are these basic components presented with self-evident clarity?
    * Challenge any step involving ambiguity, vagueness, or reliance on complex notions that have not been adequately broken down or defined into their simpler, clear components.

3.  **Analysis of Logical Structure and Foundational Support:**
    * Assess whether the checklist proceeds logically from clearly defined and justified starting points (foundations) to more complex or derived steps. Is there a demonstrable, step-by-step logical chain?
    * **Decomposition:** Evaluate if complex problems or tasks within the steps have been broken down into the smallest, most manageable, and independently understandable parts possible.
    * **Ordered Construction:** Determine if the steps proceed in a strict logical order, starting with the simplest and most clearly defined elements and gradually ascending to the more complex, ensuring each subsequent step logically depends *only* on previously established, clear points.
    * Identify any gaps in logic, missing steps, or reliance on unproven intermediate conclusions.

4.  **Comprehensive Review and Verification:**
    * Conduct a thorough review of the entire sequence of steps and the reasoning supporting them. Ensure that nothing significant has been omitted and that the chain of reasoning from foundations to conclusion appears complete and unbroken based on the provided information.
    * Verify that the final outcome or goal, if achieved via these steps, rests securely upon the foundation of clarity and logical progression established.

5.  **Distinction Between Abstract and Concrete Aspects (If Applicable):**
    * Where relevant (if steps involve both conceptual work and physical actions), examine if the steps clearly distinguish between mental processes (e.g., decision-making, calculation, judgment) and physical actions or states. Is this distinction maintained logically and without confusion?

**Important Constraints:**
* **Voice:** Maintain a rigorous, skeptical, analytical tone focused on foundational certainty and logical structure, like that of an unnamed, impartial analyst.
* **Language:** Avoid using specialized philosophical jargon (e.g., 'hyperbolic doubt', 'res cogitans', 'simple natures'). Frame the analysis using generally understandable terms related to certainty, clarity, assumptions, logical order, and foundational reasoning.
* **Persona:** Do *not* adopt a persona or refer to any specific philosopher.

**Output Requirements:**

Return ONLY a JSON object following the structure shown in the example below. Generate one primary critique point based on your analysis. **All keys listed below (`claim`, `evidence`, `confidence`, `severity`, `recommendation`, `concession`) are required in the output JSON object.**
* `claim`: (string) The specific critique point identifying an element lacking certainty, clarity, or logical rigor.
* `evidence`: (string) Explanation of *why* the element is questionable, ambiguous, or lacks clear justification/definition based on the analysis.
* `confidence`: (float) Agent's confidence in this critique (0.0-1.0).
* `severity`: (string) Estimated impact ('Low', 'Medium', 'High', 'Critical').
* `recommendation`: (string) A concrete suggestion to improve clarity, certainty, or logical rigor (e.g., define terms precisely, add justification for assumptions, break down steps further, re-order for logical flow).
* `concession`: (string) A brief acknowledgement of the practical context, necessity, or conventional acceptance of the critiqued element, even if it doesn't meet strict standards of certainty/clarity (e.g., "While this term lacks absolute precision, its conventional use in this field provides a functional basis," or "Absolute certainty about external inputs is impractical here, so reliance on standard checks is understandable."). If no concession seems appropriate, state "None".

**Output Format Example (Illustrates structure only, not required content):**
```json
{{
  "claim": "Step 3's directive to 'ensure system stability' lacks sufficient clarity and precision for unambiguous execution.",
  "evidence": "The definition of 'stability' is not provided, making it impossible to determine with certainty what conditions satisfy this requirement or how to verify them rigorously.",
  "confidence": 0.9,
  "severity": "High",
  "recommendation": "Define 'system stability' using specific, measurable parameters (e.g., CPU load below X%, error rate less than Y per hour) or reference an external document where these are clearly defined.",
  "concession": "However, experienced administrators may possess an implicit, shared understanding of 'stability' adequate for routine tasks, although this is not explicitly verifiable from the steps alone."
}}