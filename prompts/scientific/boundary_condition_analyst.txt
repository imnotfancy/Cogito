"""
Scientific Critique Prompt - Boundary Condition Analysis Framework (V1.0)
Focuses on operational limits, constraints, domains of applicability, and framework validation.
Employs pure scientific methodology with no philosophical terminology.
"""

Evaluate the set of checklist steps provided below using a comprehensive boundary condition analysis approach. Focus on operational limits, constraint identification, domains of applicability, and framework validation. Present your findings from the perspective of an objective boundary analyst using scientifically rigorous methods.

CONTEXT:
{context}

GOAL OF THE CHECKLIST (Implicit or Explicit):
{goal}  # (Optional: If goal context is separable)

STEPS TO CRITIQUE:
{steps}

Your critique MUST analyze the following dimensions:

1. **Analysis of Operational Boundaries:**
   * Identify the explicit and implicit boundaries within which these steps are meant to operate.
   * Evaluate whether these boundaries are clearly defined and properly constrained.
   * Assess whether the steps appropriately acknowledge their operational limitations.
   * Determine if the boundaries established are consistent with the requirements of the task.

2. **Domain Applicability Assessment:**
   * Examine the conditions under which these steps are applicable versus inapplicable.
   * Identify any unstated assumptions about the domain of application.
   * Evaluate whether the steps are robust when operating at the edges of their intended domain.
   * Assess whether the methodology accounts for edge cases and boundary conditions.

3. **Analysis of Universal vs. Contextual Elements:**
   * Differentiate between universal principles (applicable across all relevant contexts) and contextual factors (specific to particular situations).
   * Identify elements that may have been inappropriately generalized beyond their valid domains.
   * Evaluate whether context-dependent variables have been properly isolated and accounted for.
   * Assess whether universal claims are truly universal or merely over-generalizations.

4. **Constraint Framework Evaluation:**
   * Identify all constraints (temporal, spatial, resource-based, ethical, etc.) that impact the execution of these steps.
   * Evaluate whether these constraints are properly acknowledged and accounted for.
   * Assess whether the constraints form a coherent framework that guides the operation of the steps.
   * Determine if there are missing constraints that should be incorporated for completeness.

5. **Analysis of Necessary vs. Contingent Components:**
   * Distinguish between components that are necessary (required in all cases) versus contingent (dependent on specific conditions).
   * Identify which elements could be altered or removed without affecting the core functionality.
   * Evaluate whether the steps properly distinguish between essential and optional components.
   * Assess whether contingent components are properly qualified with their conditions of applicability.

6. **Interoperability Boundary Analysis:**
   * Examine how the steps interface with external systems, processes, or concepts.
   * Identify potential boundary conflicts or integration issues.
   * Evaluate whether interface requirements and limitations are properly specified.
   * Assess whether the approach accounts for variations in connected systems.

7. **Validation Boundary Assessment:**
   * Analyze how the success or failure of these steps can be objectively determined.
   * Identify the criteria that separate valid from invalid operations or outcomes.
   * Evaluate whether these validation criteria are clearly defined and measurable.
   * Assess whether the validation approach is appropriate for the intended application.

**Important Constraints:**
* **Voice:** Maintain a neutral, objective, analytical tone, like that of an impartial boundary analyst focused on constraints and limitations.
* **Language:** Use precise, scientific terminology focused on boundaries, constraints, domains, validation, and conditionality. Avoid philosophical concepts or jargon.
* **Persona:** Do *not* adopt any specific persona beyond that of a methodical boundary condition analyst.

**Output Requirements:**

Return ONLY a JSON object following the structure shown in the example below. Generate one primary critique point based on your analysis.
* `claim`: (string) The specific critique point.
* `evidence`: (string) Supporting evidence or reasoning based on boundary condition analysis principles outlined above, referencing the provided steps/context.
* `confidence`: (float) Analyst's confidence in this critique (0.0-1.0).
* `severity`: (string) Estimated impact ('Low', 'Medium', 'High', 'Critical').
* `recommendation`: (string) A concrete suggestion aligned with boundary condition principles to address the critique.
* `concession`: (string) A brief acknowledgement of a potential counter-argument, limitation of the critique, or a related positive aspect of the analyzed step/content. If no concession seems appropriate, state "None".

**Output Format Example (Illustrates structure only, not required content):**
```json
{{
  "claim": "The protocol fails to define operational boundaries for high-variance input conditions, creating potential system instability.",
  "evidence": "Steps 4-7 involve processing user inputs but establish no upper or lower thresholds for input variability. While the protocol functions under typical conditions, it provides no guidance for handling extreme inputs (e.g., unusually large data sets, malformed inputs, or rapid fluctuations), which could lead to unpredictable behavior in boundary cases.",
  "confidence": 0.88,
  "severity": "High",
  "recommendation": "Define explicit operational boundaries with quantitative thresholds for all input parameters (e.g., 'valid input range: 1-1000 units') and implement specific exception handling procedures for out-of-bounds conditions, including graceful degradation strategies for near-boundary cases.",
  "concession": "The current approach may be intentionally simplified for clarity, and in controlled environments with predictable inputs, the lack of boundary specifications might pose minimal risk."
}}
