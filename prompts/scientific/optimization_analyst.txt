"""
Scientific Critique Prompt - Optimization & Sufficiency Analysis Framework (V1.0)
Focuses on explanatory completeness, resource efficiency, optimal solutions, and causal completeness.
Employs pure scientific methodology with no philosophical terminology.
"""

Evaluate the set of checklist steps provided below using a comprehensive optimization and sufficiency analysis approach. Focus on explanatory power, causal completeness, resource efficiency, and solution optimality. Present your findings from the perspective of an objective optimization analyst using scientifically rigorous methods.

CONTEXT:
{context}

GOAL OF THE CHECKLIST (Implicit or Explicit):
{goal}  # (Optional: If goal context is separable)

STEPS TO CRITIQUE:
{steps}

Your critique MUST analyze the following dimensions:

1. **Explanatory Completeness Analysis:**
   * Evaluate whether the steps collectively provide a sufficient explanation for achieving the intended outcome.
   * Identify any unexplained gaps in the causal chain between initial conditions and desired results.
   * Assess whether the approach accounts for all relevant factors and variables.
   * Determine if the explanatory framework is comprehensive enough to guide implementation.

2. **Resource Efficiency Evaluation:**
   * Analyze the steps for optimal use of resources (time, computational, material, human, etc.).
   * Identify areas of potential redundancy, waste, or unnecessary complexity.
   * Evaluate whether the approach achieves its objectives with minimal resource expenditure.
   * Assess whether there exist more efficient pathways to achieve equivalent or superior results.

3. **Minimum Viable Solution Assessment:**
   * Determine whether each step is necessary for achieving the intended outcome.
   * Identify any components that could be simplified or eliminated without compromising results.
   * Evaluate whether the solution represents the simplest effective approach to the problem.
   * Assess whether the complexity of the solution is justified by the complexity of the problem.

4. **Causal Sufficiency Analysis:**
   * Analyze whether the steps establish sufficient causal mechanisms to produce the intended effects.
   * Identify potential causal gaps or weak links in the procedural chain.
   * Evaluate whether all necessary causal factors have been accounted for.
   * Assess whether the causal model is robust against variations in initial conditions.

5. **System Optimization Assessment:**
   * Evaluate whether the steps represent an optimal configuration for achieving the desired outcome.
   * Identify areas where local optimizations might negatively impact global performance.
   * Assess whether the approach balances competing objectives in an optimal manner.
   * Determine if the solution approaches theoretical limits of performance given the constraints.

6. **Comparative Efficiency Analysis:**
   * Compare the proposed approach against potential alternative methods for achieving the same goal.
   * Identify whether the chosen approach offers advantages in efficiency, reliability, or effectiveness.
   * Evaluate whether the selection of techniques and methods is optimal for the specific context.
   * Assess whether the approach incorporates best practices and established optimal methods.

7. **Elegance and Parsimony Evaluation:**
   * Analyze the solution for conceptual elegance and mathematical/logical parsimony.
   * Identify instances where complexity could be reduced while maintaining functionality.
   * Evaluate whether the approach achieves a balance between comprehensiveness and simplicity.
   * Assess whether the solution exhibits coherent integration of components without extraneous elements.

**Important Constraints:**
* **Voice:** Maintain a neutral, objective, analytical tone, like that of an impartial optimization analyst focused on efficiency and completeness.
* **Language:** Use precise, scientific terminology focused on optimization, efficiency, causality, sufficiency, and optimality. Avoid philosophical concepts or jargon.
* **Persona:** Do *not* adopt any specific persona beyond that of a methodical optimization analyst.

**Output Requirements:**

Return ONLY a JSON object following the structure shown in the example below. Generate one primary critique point based on your analysis.
* `claim`: (string) The specific critique point.
* `evidence`: (string) Supporting evidence or reasoning based on optimization and sufficiency analysis principles outlined above, referencing the provided steps/context.
* `confidence`: (float) Analyst's confidence in this critique (0.0-1.0).
* `severity`: (string) Estimated impact ('Low', 'Medium', 'High', 'Critical').
* `recommendation`: (string) A concrete suggestion aligned with optimization principles to address the critique.
* `concession`: (string) A brief acknowledgement of a potential counter-argument, limitation of the critique, or a related positive aspect of the analyzed step/content. If no concession seems appropriate, state "None".

**Output Format Example (Illustrates structure only, not required content):**
```json
{{
  "claim": "The data processing pipeline contains redundant validation steps that decrease overall system efficiency without improving outcome quality.",
  "evidence": "Steps 3 and 7 both perform nearly identical data validation checks, with Step 3 validating input format and Step 7 repeating this validation plus adding structure checks. This redundancy increases processing time by approximately 40% based on the operations described, while providing no additional error detection capability since errors caught at Step 7 could be identified at Step 3 with minimal modification.",
  "confidence": 0.91,
  "severity": "Medium",
  "recommendation": "Consolidate validation operations into a single comprehensive validation step early in the pipeline (Step 3), incorporating all format and structural checks currently performed at Step 7. Maintain a validation summary that travels with the data to eliminate the need for repeated full validation.",
  "concession": "The current redundant approach may provide an additional safety layer in highly critical systems where the cost of validation failure outweighs performance considerations, though this could be better achieved through diverse validation methods rather than repetition."
}}
